[tool.poetry]
name = "thalassa"
version = "0.0.0"  # overwritten by poetry-dynamic-versioning plugin
description = "A library for visualizing large scale results of hydrodynamic simulations"
authors = ["Panos Mavrogiorgos <pmav99@gmail.com>"]
license = 'EUPL-1.2'
readme = "README.md"
repository = "https://github.com/ec-jrc/thalassa.git"
classifiers = [
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Visualization",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = ">=3.9, <4.0"
bokeh = ">=3.0"
Cartopy = "*"
dask = "*"
datashader = "*"
geopandas = "*"
geoviews = ">=1.10"
holoviews = "*"
ipywidgets = "*"
numba = ">0.52"
numpy = "*"
numpy-indexed = "*"
pandas = "*"
scipy = "*"
shapely = "*"
xarray = {version = "*", extras = ["io", "accel"]}

[tool.poetry.group.dev.dependencies]
covdefaults = "*"
mypy = ">=1"
pytest = "*"
pytest-cov = ">=3.0"
ipykernel = "*"
ipython = "*"
papermill = "*"

[tool.poetry.group.docs.dependencies]
mkdocs = "*"
mkdocs-material = "*"
mkdocstrings = "*"
mkdocstrings-python = "*"
pymdown-extensions = "*"
black = "*"

[tool.poetry-dynamic-versioning]
enable = true
dirty = false

[build-system]
requires = [
    "poetry-core>=1.0.0",
    "poetry-dynamic-versioning",
]
build-backend = "poetry_dynamic_versioning.backend"

[tool.black]
line-length = 108
target-version = ['py39']

[tool.pytest.ini_options]
addopts = "-ra --verbose --showlocals --tb=short"
testpaths = ["tests"]
log_cli = true
filterwarnings = [
    'ignore:distutils Version classes are deprecated. Use packaging.version instead:DeprecationWarning',
    'ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning',
]

[tool.mypy]
python_version = "3.9"
plugins = [
    "numpy.typing.mypy_plugin"
]
show_error_codes = true
show_column_numbers = true
show_error_context = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
strict = true
ignore_missing_imports = true

# mypy per-module options:
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = true

[tool.ruff]
target-version = "py39"
line-length = 108
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "C90",  # mccabe
    "A",  # flake8-builtins
    "COM",  # flake8-commas
    # "UP",  # pyupgrade
    # "YTT",  # flake-2020
    # "S",  # floke8-bandit
    # "BLE",  # flake8-blind-except
    # "B",  # flake8-bugbear
    # "T20",  # flake8-print
    # "PD",  # pandas-vet
    # "NPY",  # numpy-specific rules
    # "RUF",  # ruff-specific rules
    # "D",  # pydocstyle
    # "I",  # isort
    # "N",  # pep8-naming
]
ignore = [
    "E501", # line-too-long
    "D103",  # undocumented-public-function
    "PD901",  # pandas-df-variable-name
]

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["thalassa"]
omit = []
concurrency = [
  "multiprocessing",
  "thread",
]
parallel = true
sigterm = true

[tool.coverage.report]
fail_under = 55
